pipeline {
    agent { 
        node {
            label 'docker-agent-python'
        }
    }
    stages {
        stage('Clone Repository') {
            steps {
                echo "Cloning repository with all branches.."
                sh 'git clone https://github.com/cosminpopovici14/jenkins2.0.git'
                dir('jenkins2.0') {
                    sh 'git remote update --prune'
                }
            }
        }
        stage('Verify CMake Installation') {
            steps {
                echo "Verifying CMake installation.."
                sh 'cmake --version'
            }
        }
        stage('Checkout Main Branch') {
            steps {
                echo "Checking out main branch.."
                dir('jenkins2.0') {
                    sh 'git checkout main'
                }
            }
        }
        stage('Install Python Dependencies') {
            steps {
                echo "Installing Python dependencies.."
                dir('jenkins2.0') {
                    sh 'pip install -r requirements.txt'
                }
            }
        }
        stage('Run Python Test') {
            steps {
                echo "Running Python Test.."
                dir('jenkins2.0') {
                    sh '''
                    set -e
                    chmod +x test.py
                    python test.py
                    '''
                }
            }
        }
        stage('Checkout gtest Branch') {
            steps {
                echo "Checking out gtest branch.."
                dir('jenkins2.0') {
                    sh 'git checkout gtest'
                }
            }
        }
        stage('Build GTest') {
            steps {
                echo "Building GTest.."
                dir('jenkins2.0/tests/gtest') {
                    sh '''
                    # Construim GTest
                    set -e
                    if [ ! -d "build" ]; then
                        mkdir build
                    fi
                    cd build
                    ls -l
                    cmake ..
                    cmake --build .
                    '''
                }
            }
        }
        stage('Run GTest') {
            steps {
                echo "Running GTest.."
                dir('jenkins2.0/tests/gtest/build') {
                    sh '''
                    set -e
                    ls -l
                    chmod +x ./test_main
                    ./test_main
                    '''
                }
            }
        }
    }
}
